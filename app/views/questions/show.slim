h1.text-center 
  a.pull-left.text-muted href="#{questions_path}"
    span.glyphicon.glyphicon-arrow-left
  = @question.title 
  
- if @question.category_name   
  p.text-center
    strong.text-muted Category: 
    = @question.category_name

p.text-center
  strong.text-muted By: 
  = user_full_name(@question)

- if @question.taggings  
ul.list-inline.text-center 
  - @question.taggings.each do |t|
    li = fa_icon("tag", text: "#{t.tag.name}")
    
    
    
.spacer20

.container
  .col-md-8.col-md-offset-2
    .text-center = @question.body
    
    / *** Edit question ***      
    - if can? :manage, @question
    = link_to fa_icon("pencil", text: " Edit"), edit_question_path(@question), class: "pull-left"
    
    ul.list-inline.pull-right
      li 
        / *** Vote *** 
        - vote = @question.vote_for(current_user)
        - if !vote 
          = link_to "Vote up", question_votes_path(@question, {vote: {is_up: true} }), method: :post 
          span.count = link_to "Vote down", question_votes_path(@question, {vote: {is_up: false} }), method: :post
          span.text-muted.count = @question.vote_result
        - elsif vote.is_up?
          = link_to "Remove Vote up", question_vote_path(@question, vote), method: :delete 
          span.count = link_to "Vote down", question_vote_path(@question, vote, vote: {is_up: false}), method: :patch
          span.text-muted.count = @question.vote_result
        - else
          = link_to "Vote Up", question_vote_path(@question, vote, vote: {is_up: true}), method: :patch 
          span.count = link_to "Remove Vote down", question_vote_path(@question,vote), method: :delete 
          span.text-muted.count = @question.vote_result 
          
      li
        / *** Like question ***
        - like = @question.like_for(current_user)
        - if like
          = link_to fa_icon("thumbs-down lg"), question_like_path(@question, like),
              method: :delete,
              class: "text-muted"
        - else
          = link_to fa_icon("thumbs-up lg"), question_likes_path(@question),
              method: :post,
              class: "text-muted"
        
        span.text-muted.count = @question.likes_count
        
      li#question-favorite
        /** Favorite question **
        = render "favorites/favorite"

  
.spacer10

.container
  .col-md-8.col-md-offset-2
    h3.text-muted Answers
    hr  
    
    / ** Answer Form **
    #answer-form = render "answers/form"
    
    .clearfix
    .spacer20
    
    / ** List Answers **
    - @answers = Answer.for_question(@question.id).order("created_at DESC").page(params[:page])
        
    ul.media-list#answer-list  
      - @answers.each do |ans|
        = render "answers/answer", answer: ans

/ ans.comments.build
/ Comment.new(answer: ans)

.container.text-center
  = paginate @answers  
